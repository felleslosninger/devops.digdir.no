<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blogg on Devops</title><link>/bloggarkiv/</link><description>Recent content in Blogg on Devops</description><generator>Hugo</generator><language>nb-NO</language><lastBuildDate>Wed, 27 Apr 2022 13:45:36 +0200</lastBuildDate><atom:link href="/bloggarkiv/index.xml" rel="self" type="application/rss+xml"/><item><title>Shift-left-security: Sårbarheitsscanning i praksis</title><link>/bloggarkiv/blog-security-scan/</link><pubDate>Wed, 27 Apr 2022 13:45:36 +0200</pubDate><guid>/bloggarkiv/blog-security-scan/</guid><description>&lt;p>I dag leverer dei fleste utviklarar docker images av koden sin uavhengig av programmeringsspråk. Det er stort sett slutt på tida då ein java-utviklar leverte ei svær EAR eller WAR fil eller på andre sære format. Så denne standardiseringa gjer at koden kan køyrast enklare opp og meir likt f.eks. i eit Kubernetes-miljø. Det betyr også at ein kan bruke dei same verktøya for deploy og ulike typar testar, og ikkje minst for for å unngå sårbarheiter. Dette vil me påstå gir oss ei betre verktøykasse å velgje frå.&lt;/p></description></item><item><title>Refaktorering - ei god investering</title><link>/bloggarkiv/refaktorering/</link><pubDate>Thu, 31 Mar 2022 11:46:14 +0200</pubDate><guid>/bloggarkiv/refaktorering/</guid><description>&lt;p>Hugsar du første gong du løyste ei utfordrande kodeoppgåve? Eller om du ikkje har koda før så hugsar du kanskje ein gong du jobba med ei oppgåve som var litt for vanskeleg, eller bygde eit stort jenga tårn med mange brikkar utan at det datt ned. Då har du kanskje kjent på ei blanding av angst, frustrasjon, lettelse, glede medan du arbeidde med det, løyste det og fekk det til å fungere akkurat som det skulle. Så kjem tilbakemeldingane og du må gjere endringar for å utbetre det du laga. Då har du kanskje kjent på frykta ved tanken på å gjere endringar på denne flotte velfungerande tingen du har laga og tenkjer kanskje: &lt;em>&amp;ldquo;om eg endrar på noko no så sluttar det kanskje å fungere, kanskje eg gjer ein feil og då klarer eg ikkje å fikse den igjen.&amp;rdquo;&lt;/em> Slik tenker du gjerne første gong når du skal refaktorere kode du ikkje heilt forstår sjølv om du nettopp skreiv den. Då kjem gjerne kjenslene av angst og frustrasjon tilbake for å prøve å hindre deg frå å lykkast. Om du let desse kjenslene være kjensler, og prøver så vil du kanskje sjå at du klarer det og koden blir enklare å lese, ryddigare og enklere å gjenbruke. Enkel, elegant og gjenbrukbar kode, det er ei herleg kjensle det.&lt;/p></description></item><item><title>Vel gjennomførte Digdir DevOpsDagar</title><link>/bloggarkiv/vel-gjennomfort-devopsdagar/</link><pubDate>Wed, 23 Mar 2022 14:07:49 +0100</pubDate><guid>/bloggarkiv/vel-gjennomfort-devopsdagar/</guid><description>&lt;p>Då var dei første Digdir DevOpsDagane ferdige, og ut ifrå &amp;ldquo;målingane&amp;rdquo; kan ein lese at det har vore ein strålande suksess. Der er sjølvsagt nokre forbetringspunkt, men det er slik det skal vere i DevOps, alltid sjå på korleis ein kan bli betre.&lt;/p>
&lt;p>Digdir DevOpsDagane fann stad på hotellet i Sogndal dei første to dagane, og siste dagen blei gjennomført på kontoret på Leikanger. Det var omtrent 75 deltakarar frå alle tre lokasjonane.&lt;/p></description></item><item><title>Lean og effektivitetsparadokset</title><link>/bloggarkiv/lean-devops-effektivitetsparadokset/</link><pubDate>Wed, 02 Mar 2022 20:00:00 +0100</pubDate><guid>/bloggarkiv/lean-devops-effektivitetsparadokset/</guid><description>&lt;p>Lean har sin opprinnelse frå Toyota og deiras måte å organisere sin produksjon på. Noko av det som går igjen når ein snakker om Lean er at ein skal minimere unødvendig bruk av ressurser som ikkje tilfører verdi for sluttkunden eller til sluttproduktet.&lt;/p>
&lt;p>Lean beskriver to perspektiver på effektivitet. Den eine er ressurseffektivitet der ein har fokus på at alle ressurser i ein organisasjon er godt utnytta. Dette betyr at alle tilsette alltid har fullt opp med oppgåver(og i tillegg ofte oppgåver ventende i kø). Dei er 100% effektive for dei har alltid noko å jobbe med. Mange organisasjoner er fokuserte på nettopp denne måten å måle effektivitet på, det kan til og med være målet i seg sjølv for organisasjonen å ha høg utnyttelse av ressursene.&lt;/p></description></item><item><title>DevOps er endring av kultur</title><link>/bloggarkiv/kulturell-endring/</link><pubDate>Tue, 22 Feb 2022 18:10:17 +0100</pubDate><guid>/bloggarkiv/kulturell-endring/</guid><description>&lt;p>Simon Sinek og ideen hans om den gyldne sirkelen &amp;ldquo;the golden circle&amp;rdquo;, der alt startar med å stille seg spørsmålet KVIFOR - WHY, gir oss inpirasjon til å forstå kva som kan vere svaret på disse spørsmåla: nemleg endring av kultur. Kva har dette med DevOps å gjere? Jo sjølve kjernen av DevOps er kultur og kulturell endring.&lt;/p>
&lt;p>&lt;img src="./goldencircle.png" alt="alt text" title="Illustrasjon av den gyldne sirkelen - the golden circle">&lt;/p>
&lt;p>Sinek og ideen hans om the The Golden Circle gir eit rammeverk som organisasjoner kan byggast på, bevegelser kan støtte seg på og som vi kan bli inspirert av. Den gyldne sirkelen forklarar at før nokon vil ta i bruk eit produkt, ein tjeneste, eller tankesett - må dei først forstå KVIFOR - WHY.&lt;/p></description></item><item><title>Finn flyten!</title><link>/bloggarkiv/finn-flyten/</link><pubDate>Wed, 16 Feb 2022 15:52:58 +0100</pubDate><guid>/bloggarkiv/finn-flyten/</guid><description>&lt;p>Fungerende og dedikerte DevOps-teams er på mange måter &lt;em>privilegerte&lt;/em>.&lt;/p>
&lt;p>Både verktøy, løsninger og metodikk som benyttes er med stor sannsynlighet laget
&lt;em>nettopp&lt;/em> for å understøtte flyt, automatisering og effektive, kontinuerlige leveranser.
Og alle på teamet er i tillegg enige om at disse tingene er viktige.&lt;/p>
&lt;p>Men hvis man løfter blikket litt, utover kildekoden i neste &lt;a href="https://trunkbaseddevelopment.com/">feature branch&lt;/a>,
så er det det nødvendigvis ikke slik i hele resten av organisasjonen.&lt;/p>
&lt;p>Et DevOps-team som utvikler og drifter en løsning er som regel del av en større organisasjon (om man ikke er en liten startup),
og prosesser og verdistrømmer relevant for teamet involverer som regel også mange andre deler av organisasjonen.&lt;/p></description></item><item><title>2017, året GitOps kom til verden</title><link>/bloggarkiv/2017-aret-da-gitops-kom-til-verden/</link><pubDate>Thu, 10 Feb 2022 08:10:17 +0100</pubDate><guid>/bloggarkiv/2017-aret-da-gitops-kom-til-verden/</guid><description>&lt;p>På vårparten i 2017 var ein av Digdir sine løysingar &lt;a href="https://einnsyn.no/">einnsyn.no&lt;/a> under etablering og ein såg på måtar å overlevere applikasjonar som skulle settast opp av drift. Grunna retningslinjer for tilgangstyring kunne ein ikkje la utvikling få direkte tilgang til containerplattformen for å rulle ut applikasjonar. Ein måtte finne ei løysing som kunne gi utvikling tilgang til å sette i gang utrulling inndirekte. Sidan eInnsyn er ei løysing basert på mikrotjenester, blei det levert via Docker Compose filer.&lt;/p></description></item><item><title>Systematisk måling av leveransekvaliteten til et devops-team</title><link>/bloggarkiv/measure-software-delivery-performance/</link><pubDate>Thu, 20 Jan 2022 19:00:01 +0100</pubDate><guid>/bloggarkiv/measure-software-delivery-performance/</guid><description>&lt;p>I sine &lt;a href="https://www.devops-research.com/research.html#reports">State of DevOps rapporter&lt;/a> benytter DORA fire metrikker for å måle leveransekapasiteten til et team hvorav to måler gjennomstrømningshastighet av endringer og to måler stabilitet på disse endringene. Utgangspunktet er at jo raskere du kan levere til produksjon, jo raskere kan du levere verdi til kundene. Det er verdt å merke seg at raskt ikke betyr å kompromisse på kvalitet - snarere tvert om.&lt;/p>
&lt;h2 id="gjennomstrømningshastighet">Gjennomstrømningshastighet&lt;/h2>
&lt;h3 id="ledetid-for-kodeendringer--lead-time-for-changes">Ledetid for kodeendringer | Lead time for changes&lt;/h3>
&lt;p>Hvor lang tid går det fra en kodeendring er gjort til den er i produksjon? Her er det altså ikke snakk om hvor lang tid det tar å kode en endring, men hvor lang tid det går fra en utvikler sier seg ferdig til koden er ute i produksjon. Her liger de beste på under en time.&lt;/p></description></item><item><title>State of DevOps 2021</title><link>/bloggarkiv/state-of-devops-report/</link><pubDate>Thu, 20 Jan 2022 18:01:00 +0100</pubDate><guid>/bloggarkiv/state-of-devops-report/</guid><description>&lt;p>På sidene til &lt;a href="https://www.devops-research.com/research.html">DevOps Research and Assessment&lt;/a> finner du &lt;a href="https://services.google.com/fh/files/misc/state-of-devops-2021.pdf">årets&lt;/a> og tidligere års rapporter. Årets rapport tar blant annet for seg hvordan Site Reliability Engineering (SRE) og DevOps utfyller hverandre, sikkerhet i utviklingsprosessen, viktigheten av intern dokumentasjon og hvilke tekniske kapabiliteter som er vesentlig for et DevOps team å implementere for å lykkes. Rapporten går ikke i dybden på kapabilitetene, men det finnes grundigere gjennomgang på sidene til DORA som f. eks. her for &lt;a href="https://cloud.google.com/architecture/devops/devops-tech-shifting-left-on-security">sikkerhet&lt;/a>. Du finner helt sikkert &amp;ldquo;ditt&amp;rdquo; tema og det du brenner for, ta en kikk:)&lt;/p></description></item><item><title>Grunnleggende prinsipper i DevOps</title><link>/bloggarkiv/grunnleggende-prinsipper-i-devops/</link><pubDate>Tue, 18 Jan 2022 14:56:11 +0100</pubDate><guid>/bloggarkiv/grunnleggende-prinsipper-i-devops/</guid><description>&lt;p>DevOps bygger vidare på Lean og Smidige (Agile) prinsipp. Lean fokuserer på raskare og betre kvalitet på det ein leverer. Dette er viktig i både Smidig og DevOps. Medan Smidig fokuserer på utviklingsprosessen, så ser DevOps på eit breiare bilde som også inkluderer drift.&lt;/p>
&lt;p>Eit grunnleggande prinsipp i DevOps er &amp;ldquo;The three ways&amp;rdquo;. Dette er tre nivå for å forbetre prosessen. Den fyrste er flyt (flow) gjennom heile systemet/prosessen. Korleis forbetre og effektivisere flyten? Identifisere forbedringar som forbedrer flyten gjennom heile systemet. Å optimalisere eit steg medan det er andre steg som er flaskehalser er bortkasta (waste), så viktig å sjå på heilheiten.&lt;/p></description></item></channel></rss>